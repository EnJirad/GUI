local Xlib = {}

function Xlib:MakeWindow(config)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = config.Name or "XlibScreenGui"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = MainFrame

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.Text = config.Name or "Xlib UI"
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 18
    TitleLabel.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Position = UDim2.new(1, -55, 0, 5)
    MinimizeButton.Text = "<"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    MinimizeButton.Parent = TitleBar

    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -30, 0, 5)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Parent = TitleBar

    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(0, 100, 1, -30)
    TabFrame.Position = UDim2.new(0, 0, 0, 30)
    TabFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabFrame.BorderSizePixel = 0
    TabFrame.Parent = MainFrame

    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, -100, 1, -30)
    ContentFrame.Position = UDim2.new(0, 100, 0, 30)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ContentFrame.BorderSizePixel = 0
    ContentFrame.Parent = MainFrame

    -- Create minimized icon
    local MinimizedIcon = Instance.new("TextButton")
    MinimizedIcon.Size = UDim2.new(0, 50, 0, 50)
    MinimizedIcon.Position = UDim2.new(0, 10, 0, 10)
    MinimizedIcon.Text = config.Name or "Xlib"
    MinimizedIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizedIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MinimizedIcon.Visible = false
    MinimizedIcon.Parent = ScreenGui

    -- Function to minimize the window
    local function minimizeWindow()
        MainFrame.Visible = false
        MinimizedIcon.Visible = true
    end

    -- Function to restore the window
    local function restoreWindow()
        MainFrame.Visible = true
        MinimizedIcon.Visible = false
    end

    -- Function to close the window
    local function closeWindow()
        ScreenGui:Destroy()
    end

    MinimizeButton.MouseButton1Click:Connect(minimizeWindow)
    MinimizedIcon.MouseButton1Click:Connect(restoreWindow)
    CloseButton.MouseButton1Click:Connect(closeWindow)

    -- Make the minimized icon draggable
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MinimizedIcon.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    MinimizedIcon.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MinimizedIcon.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MinimizedIcon.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- Store tabs and their order
    local tabs = {}
    local tabIndex = 0

    -- Function to make a tab
    function Xlib:MakeTab(config)
        tabIndex = tabIndex + 1
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        TabButton.Text = config.Name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 14

        -- Calculate the position of the new tab
        TabButton.Position = UDim2.new(0, 0, 0, (tabIndex - 1) * 30)
        TabButton.Parent = TabFrame

        local ToggleContainer = Instance.new("Frame")
        ToggleContainer.Size = UDim2.new(1, 0, 1, 0)
        ToggleContainer.BackgroundTransparency = 1
        ToggleContainer.Parent = ContentFrame
        ToggleContainer.Visible = false

        -- Function to switch between tabs
        TabButton.MouseButton1Click:Connect(function()
            for _, child in pairs(ContentFrame:GetChildren()) do
                if child:IsA("Frame") then
                    child.Visible = false
                end
            end
            ToggleContainer.Visible = true
        end)

        tabs[config.Name] = {
            TabButton = TabButton,
            ToggleContainer = ToggleContainer
        }

        return ToggleContainer
    end

    -- Return the tabs for external access
    function Xlib:GetTabs()
        return tabs
    end

    return self
end

function Xlib:MakeDropdown(config)
    local Dropdown = Instance.new("Frame")
    Dropdown.Size = UDim2.new(1, -20, 0, 30)
    Dropdown.Position = UDim2.new(0, 10, 0, (#config.Parent.ToggleContainer:GetChildren()) * 40)
    Dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Dropdown.Parent = config.Parent.ToggleContainer

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Dropdown

    local DropdownLabel = Instance.new("TextLabel")
    DropdownLabel.Size = UDim2.new(1, -40, 1, 0)
    DropdownLabel.Position = UDim2.new(0, 10, 0, 0)
    DropdownLabel.Text = config.Name
DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
DropdownLabel.BackgroundTransparency = 1
DropdownLabel.Font = Enum.Font.Gotham
DropdownLabel.TextSize = 14
DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
DropdownLabel.Parent = Dropdown

local DropdownArrow = Instance.new("ImageLabel")
DropdownArrow.Size = UDim2.new(0, 20, 0, 20)
DropdownArrow.Position = UDim2.new(1, -30, 0.5, -10)
DropdownArrow.Image = "rbxassetid://207443279"
DropdownArrow.BackgroundTransparency = 1
DropdownArrow.Parent = Dropdown

local DropdownFrame = Instance.new("Frame")
DropdownFrame.Size = UDim2.new(1, 0, 0, 80)
DropdownFrame.Position = UDim2.new(0, 0, 1, 0)
DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DropdownFrame.BorderSizePixel = 0
DropdownFrame.ClipsDescendants = true
DropdownFrame.Parent = Dropdown

local OptionFrame = Instance.new("ScrollingFrame")
OptionFrame.Size = UDim2.new(1, 0, 1, -30)
OptionFrame.Position = UDim2.new(0, 0, 0, 30)
OptionFrame.BackgroundTransparency = 1
OptionFrame.BorderSizePixel = 0
OptionFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
OptionFrame.Parent = DropdownFrame

local OptionLayout = Instance.new("UIListLayout")
OptionLayout.Padding = UDim.new(0, 5)
OptionLayout.SortOrder = Enum.SortOrder.LayoutOrder
OptionLayout.Parent = OptionFrame

local selectedOption = ""

local function closeDropdown()
    DropdownFrame:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    wait(0.2)
    DropdownFrame.Visible = false
    DropdownArrow.Rotation = 0
end

local function toggleDropdown()
    DropdownFrame.Visible = not DropdownFrame.Visible
    DropdownArrow.Rotation = DropdownFrame.Visible and 180 or 0
    if DropdownFrame.Visible then
        DropdownFrame:TweenPosition(UDim2.new(0, 0, 1, -80), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    else
        DropdownFrame:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end
end

Dropdown.MouseButton1Click:Connect(toggleDropdown)

for _, optionName in ipairs(config.Options) do
    local OptionButton = Instance.new("TextButton")
    OptionButton.Size = UDim2.new(1, 0, 0, 20)
    OptionButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    OptionButton.Text = optionName
    OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    OptionButton.Font = Enum.Font.Gotham
    OptionButton.TextSize = 14
    OptionButton.Parent = OptionFrame

    OptionButton.MouseButton1Click:Connect(function()
        DropdownLabel.Text = optionName
        selectedOption = optionName
        closeDropdown()
        if config.Callback then
            config.Callback(optionName)
        end
    end)
end

return Dropdown
end

return Xlib
