-- Xlib.lua
local Xlib = {}

function Xlib:MakeWindow(properties)
    local window = Instance.new("ScreenGui")
    window.Name = properties.Name or "Window"
    window.Parent = properties.Parent or game.Players.LocalPlayer:WaitForChild("PlayerGui")
    window.ResetOnSpawn = false

    local mainFrame = Instance.new("Frame", window)
    mainFrame.Size = properties.Size or UDim2.new(0, 400, 0, 350)
    mainFrame.Position = properties.Position or UDim2.new(0.5, -200, 0.5, -175)
    mainFrame.BackgroundColor3 = properties.BackgroundColor3 or Color3.fromRGB(40, 40, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = properties.Draggable or false

    local function createTitleBar()
        local titleBar = Instance.new("Frame", mainFrame)
        titleBar.Size = UDim2.new(1, 0, 0, 30)
        titleBar.BackgroundTransparency = 1

        local titleBarBg = Instance.new("Frame", titleBar)
        titleBarBg.Size = UDim2.new(1, 0, 1, 0)
        titleBarBg.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        titleBarBg.ZIndex = 0

        local titleLabel = Instance.new("TextLabel", titleBar)
        titleLabel.Size = UDim2.new(1, -60, 1, 0)
        titleLabel.Position = UDim2.new(0, 10, 0, 0)
        titleLabel.Text = properties.Name or "Window"
        titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Font = Enum.Font.SourceSansBold
        titleLabel.TextSize = 18

        local minimizeButton = Instance.new("TextButton", titleBar)
        minimizeButton.Size = UDim2.new(0, 30, 0, 30)
        minimizeButton.Position = UDim2.new(1, -70, 0, 0)
        minimizeButton.Text = "-"
        minimizeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        minimizeButton.Font = Enum.Font.SourceSansBold
        minimizeButton.TextSize = 20
        minimizeButton.AutoButtonColor = false
        minimizeButton.MouseButton1Click:Connect(function()
            mainFrame.Visible = not mainFrame.Visible
        end)

        local closeButton = Instance.new("TextButton", titleBar)
        closeButton.Size = UDim2.new(0, 30, 0, 30)
        closeButton.Position = UDim2.new(1, -40, 0, 0)
        closeButton.Text = "X"
        closeButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
        closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        closeButton.Font = Enum.Font.SourceSansBold
        closeButton.TextSize = 20
        closeButton.AutoButtonColor = false
        closeButton.MouseButton1Click:Connect(function()
            window:Destroy()
        end)

        local titleBarUICorner = Instance.new("UICorner", titleBarBg)
        titleBarUICorner.CornerRadius = UDim.new(0, 10)  -- Rounded corners only for the top

        return titleBar
    end

    local titleBar = createTitleBar()

    local tabFrame = Instance.new("ScrollingFrame", mainFrame)
    tabFrame.Size = UDim2.new(0, 120, 1, -40)
    tabFrame.Position = UDim2.new(0, 0, 0, 40)
    tabFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabFrame.CanvasSize = UDim2.new(0, 0, 2, 0)  -- Adjust as needed
    tabFrame.ScrollBarThickness = 8

    local function createTabs()
        local tabs = {}

        function tabs:MakeTab(tabProperties)
            local tabButton = Instance.new("TextButton", tabFrame)
            tabButton.Size = UDim2.new(1, -10, 0, 30)
            tabButton.Position = UDim2.new(0, 5, 0, (#tabs * 35) + 5)
            tabButton.Text = tabProperties.Name or "Tab"
            tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            tabButton.Font = Enum.Font.SourceSansBold
            tabButton.TextSize = 16
            tabButton.AutoButtonColor = false
            tabButton.MouseButton1Click:Connect(function()
                for _, child in ipairs(tabFrame:GetChildren()) do
                    if child:IsA("TextButton") then
                        child.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    end
                end
                tabButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

                local togglesFrame = mainFrame:FindFirstChild("TogglesFrame")
                if not togglesFrame then
                    togglesFrame = Instance.new("ScrollingFrame", mainFrame)
                    togglesFrame.Name = "TogglesFrame"
                    togglesFrame.Size = UDim2.new(1, -120, 1, -40)
                    togglesFrame.Position = UDim2.new(0, 120, 0, 40)
                    togglesFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                    togglesFrame.CanvasSize = UDim2.new(0, 0, 2, 0)  -- Adjust as needed
                    togglesFrame.ScrollBarThickness = 8
                end

                togglesFrame:ClearAllChildren()
                for _, toggleName in ipairs(tabProperties.Toggles or {}) do
                    local toggleButton = Instance.new("TextButton", togglesFrame)
                    toggleButton.Size = UDim2.new(1, -10, 0, 30)
                    toggleButton.Position = UDim2.new(0, 5, 0, (#togglesFrame:GetChildren() * 35) + 5)
                    toggleButton.Text = toggleName
                    toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    toggleButton.Font = Enum.Font.SourceSansBold
                    toggleButton.TextSize = 16
                    toggleButton.AutoButtonColor = false
                    toggleButton.MouseButton1Click:Connect(function()
                        -- Toggle logic goes here
                    end)
                end
            end)

            tabs[#tabs + 1] = tabButton

            return {
                AddToggle = function(toggleProperties)
                    local toggles = tabProperties.Toggles or {}
                    toggles[#toggles + 1] = toggleProperties.Name or "Toggle"
                    tabProperties.Toggles = toggles
                end
            }
        end

        return tabs
    end

    local tabs = createTabs()

    return {
        MakeTab = tabs.MakeTab,
        AddToggle = tabs[1].AddToggle  -- Assuming we always start with the first tab
    }
end

return Xlib
